lib_headers = [
  'ell.h',
  'util.h',
  'test.h',
  'strv.h',
  'utf8.h',
  'queue.h',
  'hashmap.h',
  'string.h',
  'settings.h',
  'main.h',
  'idle.h',
  'signal.h',
  'timeout.h',
  'io.h',
  'ringbuf.h',
  'log.h',
  'checksum.h',
  'netlink.h',
  'genl.h',
  'rtnl.h',
  'dbus.h',
  'dbus-service.h',
  'dbus-client.h',
  'hwdb.h',
  'cipher.h',
  'random.h',
  'uintset.h',
  'base64.h',
  'pem.h',
  'tls.h',
  'uuid.h',
  'key.h',
  'file.h',
  'dir.h',
  'net.h',
  'dhcp.h',
  'dhcp6.h',
  'cert.h',
  'ecc.h',
  'ecdh.h',
  'time.h',
  'gpio.h',
  'path.h',
  'icmp6.h',
  'acd.h',
  'tester.h',
  'cleanup.h',
  'netconfig.h',
  'sysctl.h',
  'minheap.h',
  'notifylist.h'
]

lib_sources = [
  'private.h',
  'useful.h',
  'missing.h',
  'util.c',
  'test-private.h',
  'test.c',
  'test-dbus.c',
  'strv.c',
  'utf8.c',
  'queue.c',
  'hashmap.c',
  'string.c',
  'settings.c',
  'main-private.h',
  'main.c',
  'idle.c',
  'signal.c',
  'timeout.c',
  'io.c',
  'ringbuf.c',
  'log.c',
  'checksum.c',
  'netlink-private.h',
  'netlink.c',
  'genl.c',
  'rtnl-private.h',
  'rtnl.c',
  'dbus-private.h',
  'dbus.c',
  'dbus-message.c',
  'dbus-util.c',
  'dbus-service.c',
  'dbus-client.c',
  'dbus-name-cache.c',
  'dbus-filter.c',
  'gvariant-private.h',
  'gvariant-util.c',
  'siphash-private.h',
  'siphash.c',
  'hwdb.c',
  'cipher.c',
  'random.c',
  'uintset.c',
  'base64.c',
  'asn1-private.h',
  'pem-private.h',
  'pem.c',
  'tls-private.h',
  'tls.c',
  'tls-record.c',
  'tls-extensions.c',
  'tls-suites.c',
  'uuid.c',
  'key.c',
  'file.c',
  'dir.c',
  'net-private.h',
  'net.c',
  'dhcp-private.h',
  'dhcp.c',
  'dhcp-transport.c',
  'dhcp-lease.c',
  'dhcp6-private.h',
  'dhcp6.c',
  'dhcp6-transport.c',
  'dhcp6-lease.c',
  'dhcp-util.c',
  'dhcp-server.c',
  'cert-private.h',
  'cert.c',
  'cert-crypto.c',
  'ecc-private.h',
  'ecc.h',
  'ecc-external.c',
  'ecc.c',
  'ecdh.c',
  'time.c',
  'time-private.h',
  'gpio.c',
  'path.c',
  'icmp6.c',
  'icmp6-private.h',
  'acd.c',
  'tester.c',
  'netconfig.c',
  'sysctl.c',
  'minheap.c',
  'notifylist.c'
]

linux_headers = [
  '../linux/gpio.h'
]

libell = library('ell',
  sources: lib_headers + lib_sources + linux_headers,
  include_directories: include_directories('..'),
  implicit_include_directories: false,
  gnu_symbol_visibility: 'hidden',
  version: '0.2.0',
  install: true
)

install_headers(lib_headers,
  subdir: 'ell'
)

libell_dep = declare_dependency(include_directories: include_directories('..'),
  link_with: libell)

pkgconfig = import('pkgconfig')
pkgconfig.generate(
  name: 'ell',
  description: 'Embedded Linux library',
  version: meson.project_version(),
  libraries: libell,
  # FIXME requires meson 1.9.0
  # license: meson.project_license()
)

libell_private = static_library('ell_private',
  sources: lib_headers + lib_sources + linux_headers,
  include_directories: include_directories('..'),
  implicit_include_directories: false,
  install: false
)

libell_private_dep = declare_dependency(
  link_with: libell_private
)
